<?php

namespace App\Http\Controllers\Reports\Accionistas;

use App\Http\Controllers\Controller;

use Illuminate\Http\Request;

class SearchAccionistasController extends Controller
{

    public function verify(Request $request)
    {
        try {
            $request->validate([
                'rfc' => ['required'],
            ], [
                'rfc.required' => 'El rfc es requerido',
            ]);
        } catch (\Throwable $exception) {
            return response()->json([
                'message' => 'Error al validar los datos',
                'errors' => $exception->getMessage(),
            ], 422);
        }

        $in_sat = false;
        $in_gob = false;
        $rfc = strtoupper($request->rfc);

        $satResponse = $this->searchOnSatBlackList($rfc);

        if ($satResponse['status'] == 'success') {
            if ($satResponse['result'] == 'limpio') {
                $satResult = [
                    'status' => 'success',
                    'message' => 'El rfc no se encuentra en la blacklist del sat.',
                    'data' => []
                ];
            } else {
                $satResult = [
                    'status' => 'error',
                    'message' => 'El rfc se encuentra en la blacklist del sat.'
                ];
                $in_sat = true;
            }
        } else {
            $satResult = [
                'status' => 'error',
                'message' => 'No se pudo verificar el rfc en la blacklist del sat.'
            ];
        }
        $gobResponse = $this->searchOnGob($rfc);

        if ($gobResponse['status'] == 'success') {
            $gobResult = [
                'status' => 'success',
                'message' => 'El rfc se encuentra en la base de datos de gobierno.',
                'data' => $gobResponse['data']
            ];
            $in_gob = true;
        } else {
            $gobResult = [
                'status' => 'error',
                'message' => 'El rfc no se encuentra en la base de datos de gobierno.'
            ];
        }

        $response = [
            'status' => 'success',
            'message' => 'Se verificó el rfc correctamente.',
            'data' => [
                'in_sat' => $in_sat,
                'in_gob' => $in_gob,
                'sat' => $satResult,
                'gob' => $gobResult
            ]
        ];

        return $response;

    }

    public function searchOnBlackList($rfc, $name, $curp)
    {
    }


    public function searchOnSatBlackList($rfc)
    {
        try {
            // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
            $ch = curl_init();

            curl_setopt($ch, CURLOPT_URL, "https://www.facturapi.io/v2/tools/tax_id_validation?tax_id={$rfc}");
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');


            $headers = array();
            $headers[] = 'Authorization: Bearer sk_live_ajP3bgGBLAWROdopJVlXqyx3ZB1NVv0Ex6kQynXlDK';
            curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

            $result = curl_exec($ch);
            if (curl_errno($ch)) {
                echo 'Error:' . curl_error($ch);
            }
            curl_close($ch);
        } catch (\Throwable $th) {
            return [
                'status' => 'error',
                'message' => $th->getMessage(),
            ];
        }

        $result = json_decode($result, true);

        if ($result['efos']) {
            if ($result['efos']['is_valid']) {
                $response = [
                    'status' => 'success',
                    'result' => 'limpio'
                ];
            } else {
                $response = [
                    'status' => 'success',
                    'result' => 'coincidencia'
                ];
            }
        } else {
            $response = [
                'status' => 'error',
                'message' => 'No se encontró información en la blacklist del sat.'
            ];
        }

        return $response;
    }

    public function searchOnGob($rfc)
    {
        try {
            // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
            $ch = curl_init();

            curl_setopt($ch, CURLOPT_URL, "https://servicios.dnk8.funcionpublica.gob.mx/declaranet/consulta-servidores-publicos/buscarsp?busqueda={$rfc}&collName=100");
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($ch, CURLOPT_POST, 1);

            $result = curl_exec($ch);
            if (curl_errno($ch)) {
                echo 'Error:' . curl_error($ch);
            }
            curl_close($ch);

            $result = json_decode($result, true);
        } catch (\Throwable $th) {
            return [
                'status' => 'error',
                'message' => $th->getMessage(),
            ];
        }

        if (isset($result['datos'])) {
            if (count($result['datos']) > 0) {

                $dependencias = [];

                foreach ($result['datos'] as $key => $value) {
                    $dependencias[] = $value['dependencia'];
                }

                $response = [
                    'status' => 'success',
                    'message' => 'Se encontró información en la base de datos de gobierno.',
                    'data' => $dependencias
                ];
            } else {
                $response = [
                    'status' => 'error',
                    'message' => 'No se encontró información en la base de datos de gobierno.'
                ];
            }
        } else {
            $response = [
                'status' => 'error',
                'message' => 'No se encontró información en la base de datos de gobierno.'
            ];
        }

        return $response;
    }
}
